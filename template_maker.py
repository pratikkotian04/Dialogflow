# -*- coding: utf-8 -*-
"""Template Maker.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lxCm81l80haWPrkxATy6G3736iHjRVDb

Do changes in Line no 25 , 29 , 47 and 54 for the column names which are to be dropped or renamed accordingly. See exmaples in the Training&ResponseData Folder.
"""

import pandas as pd

train_path = "Training&ResponseData\Translation_ Spanish - Training Phrases.csv"
response_path = "Training&ResponseData\Translation_ Spanish - CMS.csv"
context_data_path = "Training&ResponseData\CustomPayload.csv"
lang = "es"
filename = "SpanishTemplate.csv"


def get_train_data(train_path):
    train_df = pd.read_csv(train_path)

    # Delete the Training Phrases for English Language
    train_df = train_df.drop(
        ['Training Phrases (English)', 'Training Phrases (Spanish)'], axis=1)

    # Update the Column Names for the Training Phrases
    train_df = train_df.rename(columns={
        'Training Phrases (Spanish) - Updated': 'Training Phrases', 'Intent': 'Intent Name'}, inplace=False)

    train_df = pd.pivot_table(train_df, index=["Intent Name"], columns=train_df.groupby(
        ["Intent Name"]).cumcount().add(1), values=["Training Phrases"], aggfunc='sum')

    train_df.columns = train_df.columns.map('{0[0]}{0[1]}'.format)

    train_df.to_csv("Training&ResponseData\TrainingSheet.csv")

    return "Training Sheet Created"


def get_response_data(response_path, context_data_path, lang):
    data = pd.read_csv(response_path)
    '''
    Delete all the unnecessary column names which are not present in the format required for Abhay's Script
    '''
    response_df = data.drop(['Entities (English)', 'Entities (Spanish)',
                             'Chat response (English)', 'Chat response (Spanish)', 'Call response (English)',
                             'Call response (Spanish)',
                             'Links (English)', 'Links (Spanish, if any)', 'Labels (English)',
                             'Labels (Spanish)', 'Labels (Spanish) - Updated'], axis=1)

    # Update the column names for response data
    response_df = response_df.rename(columns={'Chat response (Spanish) - Updated': 'Responses',
                                              "Call response (Spanish) - Updated": "Telephony Response"}, inplace=False)
    # Remove spaces from the Intent name data

    response_df["Intent Name"] = response_df["Intent Name"].str.strip()

    # Provide path for data where context and other data is stored(eg. Custom Payload,Webhook, Id, etc.)
    context_df = pd.read_csv(context_data_path, encoding='unicode_escape')

    df1 = response_df.set_index("Intent Name")
    df2 = context_df.set_index("Intent Name")

    response_df = pd.merge(df1, df2, how='left', on="Intent Name")

    response_df["Lang"] = lang  # Change language code here
    response_df[""] = ""

    response_df.to_csv("Training&ResponseData\ResponseSheet.csv")

    return "Response Sheet Created"


def get_template_data(filename):
    df1 = pd.read_csv("Training&ResponseData\ResponseSheet.csv")
    df2 = pd.read_csv("Training&ResponseData\TrainingSheet.csv")

    df1["Intent Name"].count()

    df2["Intent Name"].count()

    df1 = df1.set_index("Intent Name")
    df2 = df2.set_index("Intent Name")

    df3 = pd.merge(df1, df2, how='left', on="Intent Name")

    # Final Sheet which can be then fed to Abhay's Script
    df3.to_csv("TrainingCSV\\" + filename)

    return "Template Sheet Created"


# Provide Training Phrases file path
print(get_train_data(train_path))

# Provide Response Phrases file path, Context data file path and Language code
print(get_response_data(response_path, context_data_path, lang))

# Provide Template file name
print(get_template_data(filename))
